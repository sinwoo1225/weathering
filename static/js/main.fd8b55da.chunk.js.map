{"version":3,"sources":["components/Loading.js","components/Weather.js","App.js","index.js"],"names":["Loading","msg","className","WeatherGradients","Weather","weather","temp","location","getWeatherIcon","App","state","isLoading","loadingMsg","lat","lon","Axios","get","name","data","main","this","setState","position","coords","latitude","longitude","getWeather","geolocation","window","navigator","getCurrentPosition","handleSuccesGetPos","bind","handleErrorGetPos","getLocation","Math","round","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAYeA,MARf,YAAwB,IAANC,EAAK,EAALA,IACd,OACI,yBAAKC,UAAU,cACX,0BAAMA,UAAU,cAAcD,K,iDC4B1C,IAAME,EAAmB,CACrB,MAAQ,mBACR,QAAU,eACV,OAAS,qBACT,KAAO,iBACP,aAAe,eACf,KAAO,kBACP,KAAO,kBACP,MAAQ,kBACR,KAAO,gBACP,KAAO,gBACP,IAAM,eACN,OAAS,iBACT,QAAU,mBAoCCC,MAvEf,YAA4C,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,SAC7B,OACI,yBAAKL,UAAS,qBAAgBC,EAAiBE,KAC3C,yBAAKH,UAAU,oCACX,0BAAMA,UAAU,oBAAhB,KAAsCK,IAE1C,yBAAKL,UAAU,8BACX,yBAAKA,UAAU,8BACf,0BAAMA,UAAU,iBA8BhC,SAAwBG,GACpB,OAAOA,GACH,IAAK,QACD,OAAO,kBAAC,IAAD,MACX,IAAK,UACD,OAAO,kBAAC,IAAD,MACX,IAAK,SACD,OAAO,kBAAC,IAAD,MACX,IAAK,OACD,OAAO,kBAAC,IAAD,MACX,IAAK,eACD,OAAO,kBAAC,IAAD,MACX,IAAK,OACD,OAAO,kBAAC,IAAD,MACX,IAAK,OACD,OAAO,kBAAC,IAAD,MACX,IAAK,QACD,OAAO,kBAAC,IAAD,MACX,IAAK,OAEL,IAAK,OACD,OAAO,kBAAC,IAAD,MACX,IAAK,MACD,OAAO,kBAAC,IAAD,MACX,IAAK,SACD,OAAO,kBAAC,IAAD,MACX,IAAK,UACD,OAAO,kBAAC,IAAD,MACX,QACI,OAAO,kBAAC,IAAD,OA3D8BG,CAAeH,IAC3CA,EAFL,IAEeC,EAFf,W,iBCyCDG,E,4MAnDbC,MAAQ,CACNC,WAAY,EACZC,WAAa,e,kGAGEC,EAAIC,G,6FAC8CC,IAAMC,IAAN,8DAAiEH,EAAjE,gBAA4EC,EAA5E,kBAVrD,mCAUqD,kB,gBAApDG,E,EAANC,KAAMD,KAAeZ,E,EAARa,KAAQb,QAAqBC,E,EAAZY,KAAMC,KAAMb,KACjDc,KAAKC,SAAS,CAACV,WAAU,EAAON,QAAQA,EAAQ,GAAGc,KAAMb,OAAMC,SAASU,I,kJAGvDK,GAAU,IAAD,EACGA,EAASC,OAA/BC,EADmB,EACnBA,SAASC,EADU,EACVA,UAChBL,KAAKM,WAAWF,EAASC,K,0CAIzBL,KAAKC,SAAS,CAACT,WAAW,iE,oCAGd,IACJe,EAAgBC,OAAOC,UAAvBF,YACLA,EACDA,EAAYG,mBAAmBV,KAAKW,mBAAmBC,KAAKZ,MAAMA,KAAKa,kBAAkBD,KAAKZ,OAG9FA,KAAKa,sB,0CAKPb,KAAKc,gB,+BAGE,IAAD,EACiDd,KAAKV,MAApDC,EADF,EACEA,UAAUC,EADZ,EACYA,WAAWP,EADvB,EACuBA,QAAQC,EAD/B,EAC+BA,KAAKC,EADpC,EACoCA,SAE1C,OACE,yBAAKL,UAAU,aACZS,EACC,kBAAC,EAAD,CAASV,IAAKW,IACd,kBAAC,EAAD,CACEP,QAASA,EACTC,KAAM6B,KAAKC,MAAM9B,GACjBC,SAAUA,S,GA7CJ8B,IAAMC,WCJxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.fd8b55da.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Loading.css\";\r\nimport \"../App.js\";\r\n\r\nfunction Loading({msg}){\r\n    return (\r\n        <div className=\"loadingBox\">\r\n            <span className=\"font_title\">{msg}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../App.css\";\r\nimport \"./Weather.css\";\r\nimport \"./WeatherGradient.css\"\r\n\r\n// Icon Import\r\nimport { FaRainbow,FaCloudShowersHeavy,FaCloud} from \"react-icons/fa\";\r\nimport { IoIosThunderstorm } from \"react-icons/io\";\r\nimport { TiAdjustBrightness } from \"react-icons/ti\";\r\nimport { WiSprinkle,WiSmoke,WiDust, WiVolcano,WiCloudyGusts,WiTornado } from \"react-icons/wi\";\r\n\r\n\r\nfunction Weather({weather, temp, location}){   \r\n    return(\r\n        <div className={`weatherBox ${WeatherGradients[weather]}`}>\r\n            <div className=\"weather__column text_align_right\">\r\n                <span className=\"location-content\">@ {location}</span>   \r\n            </div>\r\n            <div className=\"weather__column height_100\">\r\n                <div className=\"centerContainer font_title\">\r\n                <span className=\"weather__icon\">{getWeatherIcon(weather)}</span>\r\n                    {weather} {temp}ยบ\r\n                </div>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nWeather.propTypes = {\r\n    weather :PropTypes.string.isRequired,\r\n    temp : PropTypes.number.isRequired,\r\n    location : PropTypes.string.isRequired\r\n}\r\n\r\nconst WeatherGradients = {\r\n    \"Clear\":\"gradient_sunrise\",\r\n    \"Drizzle\":\"gradient_sky\",\r\n    \"Clouds\":\"gradient_steelgray\",\r\n    \"Rain\":\"gradient_darya\",\r\n    \"Thunderstorm\":\"gradient_ash\",\r\n    \"Haze\":\"gradient_mistic\",\r\n    \"Mist\":\"gradient_mistic\",\r\n    \"Smoke\":\"gradient_50gray\",\r\n    \"Sand\":\"gradient_mini\",\r\n    \"Dust\":\"gradient_mini\",\r\n    \"Ash\":\"gradient_ash\",\r\n    \"Squall\":\"gradient_darya\",\r\n    \"Tornado\":\"gradient_50gray\"\r\n};\r\n\r\nfunction getWeatherIcon(weather){\r\n    switch(weather){\r\n        case \"Clear\":\r\n            return <TiAdjustBrightness/>;\r\n        case \"Drizzle\":\r\n            return <WiSprinkle/>;\r\n        case \"Clouds\":\r\n            return <FaCloud/>;\r\n        case \"Rain\":\r\n            return <FaCloudShowersHeavy/>\r\n        case \"Thunderstorm\":\r\n            return <IoIosThunderstorm/>;\r\n        case \"Haze\":\r\n            return <FaCloud/>;\r\n        case \"Mist\":\r\n            return <WiSprinkle/>;\r\n        case \"Smoke\":\r\n            return <WiSmoke/>;\r\n        case \"Sand\":\r\n            return <WiDust/>;\r\n        case \"Dust\":\r\n            return <WiDust/>;\r\n        case \"Ash\":\r\n            return <WiVolcano/>;\r\n        case \"Squall\":\r\n            return <WiCloudyGusts/>;    \r\n        case \"Tornado\":\r\n            return <WiTornado/>;\r\n        default:\r\n            return <FaRainbow/>;\r\n    }\r\n}\r\n\r\nexport default Weather;","import React from 'react';\nimport Loading from \"./components/Loading\";\nimport Weather from \"./components/Weather\";\nimport \"./App.css\"\nimport Axios from 'axios';\n\nconst API_KEY = \"78877597580a34750c5536bd2adc3fcc\";\n\nclass App extends React.Component{\n  \n  state = {\n    isLoading : true,\n    loadingMsg : \"Loading ,,,\"\n  }\n\n  async getWeather(lat,lon){\n    const {data:{name}, data : {weather},data:{main:{temp}}} = await Axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n    this.setState({isLoading:false, weather:weather[0].main, temp, location:name});\n  }\n\n  handleSuccesGetPos(position){\n    const {latitude,longitude} = position.coords;\n    this.getWeather(latitude,longitude);  \n  }\n\n  handleErrorGetPos(){\n    this.setState({loadingMsg:\"Can`t not use navigation, please allow location permission\"});\n  }\n\n  getLocation(){\n    const { geolocation } = window.navigator;\n    if(geolocation){\n      geolocation.getCurrentPosition(this.handleSuccesGetPos.bind(this),this.handleErrorGetPos.bind(this));\n    }\n    else{\n      this.handleErrorGetPos();\n    }\n  }\n\n  componentDidMount(){\n    this.getLocation();\n  }\n\n  render(){\n    const { isLoading,loadingMsg,weather,temp,location } = this.state;\n  \n    return (\n      <div className=\"container\">\n        {isLoading?\n          <Loading msg={loadingMsg}/>:\n          <Weather \n            weather={weather} \n            temp={Math.round(temp)}\n            location={location}  \n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}